name: CI/CD to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker Images
      run: |
        IMAGE_TAG=latest
        for SERVICE in agent-service integration-service notification-service aggregator-service
        do
          docker build -t $ECR_REGISTRY/$SERVICE:$IMAGE_TAG ./$SERVICE
          docker push $ECR_REGISTRY/$SERVICE:$IMAGE_TAG
        done

    - name: Set up kubectl
      uses: aws-actions/eks-setup-kubectl@v1
      with:
        cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}
        region: ${{ secrets.AWS_REGION }}

    - name: Deploy to EKS
      run: |
        kubectl apply -f agent-service/deployment.yaml
        kubectl apply -f agent-service/service.yaml
        kubectl apply -f integration-service/deployment.yaml
        kubectl apply -f integration-service/service.yaml
        kubectl apply -f notification-service/deployment.yaml
        kubectl apply -f notification-service/service.yaml
        kubectl apply -f aggregator-service/deployment.yaml
        kubectl apply -f aggregator-service/service.yaml
        kubectl apply -f aggregator-service/cronjob.yaml
