name: CI/CD to AWS EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker Images
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        IMAGE_TAG: latest
      run: |
        for SERVICE in agent-service integration-service notification-service aggregator-service
        do
          docker build -t $ECR_REGISTRY/$SERVICE:latest ./$SERVICE
          docker push $ECR_REGISTRY/$SERVICE:latest
        done

    - name: Update kubeconfig for EKS
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

    - name: Deploy with Blue-Green Strategy
      run: |
        CURRENT_COLOR=$(kubectl get svc agent-service -o=jsonpath='{.spec.selector.version}')
        if [ "$CURRENT_COLOR" = "blue" ]; then
          NEW_COLOR="green"
        else
          NEW_COLOR="blue"
        fi

        echo "Deploying new version to $NEW_COLOR..."

        # Apply blue/green deployment files
        kubectl apply -f agent-service/deployment-${NEW_COLOR}.yaml
        kubectl apply -f aggregator-service/deployment-${NEW_COLOR}.yaml
        kubectl apply -f integration-service/deployment-${NEW_COLOR}.yaml
        kubectl apply -f notification-service/deployment-${NEW_COLOR}.yaml

        # CronJob remains the same
        kubectl apply -f aggregator-service/cronjob.yaml

        # Patch services to route to the new version
        kubectl patch svc agent-service -p "{\"spec\": {\"selector\": {\"app\": \"agent-service\", \"version\": \"${NEW_COLOR}\"}}}"
        kubectl patch svc aggregator-service -p "{\"spec\": {\"selector\": {\"app\": \"aggregator-service\", \"version\": \"${NEW_COLOR}\"}}}"
        kubectl patch svc integration-service -p "{\"spec\": {\"selector\": {\"app\": \"integration-service\", \"version\": \"${NEW_COLOR}\"}}}"
        kubectl patch svc notification-service -p "{\"spec\": {\"selector\": {\"app\": \"notification-service\", \"version\": \"${NEW_COLOR}\"}}}"

        # Ensure services exist
        kubectl apply -f agent-service/service.yaml
        kubectl apply -f integration-service/service.yaml
        kubectl apply -f notification-service/service.yaml
        kubectl apply -f aggregator-service/service.yaml

        echo "âœ… Blue-Green deployment done. Live version is now: $NEW_COLOR"
